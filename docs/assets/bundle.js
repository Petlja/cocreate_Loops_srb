(()=>{"use strict";var t={177:(t,e,o)=>{o.r(e)}},e={};function o(n){var i=e[n];if(void 0!==i)return i.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,o),s.exports}o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{!function(){function t(t,e){var o=t.active_lessons,n=t.externalLinkLinks,i=t.externalLinkTexts,s=t.lang,r=t.longDesc,a=t.nav_link,u=t.requirements,l=t.shortDesc,h=t.toc,d=t.title,m=t.willLearn;this.x={},Object.assign(this,{active_lessons:o,externalLinkLinks:n,externalLinkTexts:i,lang:s,longDesc:r,nav_link:a,requirements:u,shortDesc:l,toc:h,title:d,willLearn:m}),this.buildPath=e;for(var v=0,f=0;f<o.length;f++)for(var p=0;p<o[f].active_activities.length;p++)this.x[c(f,p)]=v,v++}t.prototype.getLessonsCount=function(){return this.active_lessons.length},t.prototype.getActivityOrderNumber=function(t){return this.x[c(t.lectureNumber,t.activityNumber)]},t.prototype.getActivityCount=function(){return this.active_lessons.reduce((function(t,e){return t+e.active_activities.length}),0)},t.prototype.getActivityURL=function(t,e){return this.buildPath+"/"+this.active_lessons[t].folder_url+"/"+this.active_lessons[t].active_activities[e].toc_url+".html"},t.prototype.inSingleLectureMode=function(){return 1==this.getActivityCount()},t.prototype.isNextLecturePossible=function(t){return this.active_lessons[t.lectureNumber].active_activities.length-1!=t.activityNumber||this.active_lessons.length-1!=t.lectureNumber},t.prototype.nextLecture=function(t){return this.active_lessons[t.lectureNumber].active_activities.length-1>t.activityNumber?{lectureNumber:t.lectureNumber,activityNumber:t.activityNumber+1}:{lectureNumber:t.lectureNumber+1,activityNumber:0}},t.prototype.isPreviousLecturePossible=function(t){return 0!=t.lectureNumber||0!=t.activityNumber},t.prototype.previousLecture=function(t){return 0!=t.activityNumber?{lectureNumber:t.lectureNumber,activityNumber:t.activityNumber-1}:{lectureNumber:t.lectureNumber-1,activityNumber:this.active_lessons[t.lectureNumber-1].active_activities.length-1}}}();var t=function(){function t(t,e,o,n,i){this.title=n,this.docname=e,this.docPath=t,this.metaData=o,this.subNodes=i}return t.prototype.shouldIncludeNode=function(){return!this.metaData.anchor_link&&"exclude"!==this.metaData.status},t.prototype.numberOfTrueLectures=function(){return u(this).filter((function(t){return t.shouldIncludeNode()})).length-(this.shouldIncludeNode()?1:0)},t}(),e=function(){function t(t){this.includeToc=!0,this.bareContentPath="bc_html",this.title=t.title,t.content_uri.endsWith("/")?this.contentURI=t.content_uri+this.bareContentPath:this.contentURI=t.content_uri+"/"+this.bareContentPath,this.description=t.description,this.tocTree=a(t.toc_tree),this.tocListOrder=u(this.tocTree),this.includeToc=!t.include_toc||t.include_toc}return t.prototype.inSingleLectureMode=function(){return 1==this.tocListOrder.length&&this.includeToc},t.prototype.previousLecture=function(){},t.prototype.getActivityURL=function(t){return this.contentURI+"/"+this.tocListOrder[t].docPath},t.prototype.isPartOfCourse=function(t){for(var e=0;e<this.tocListOrder.length;e++)if(this.tocListOrder[e].docPath==t)return e;return-1},t}();function n(t,e){var o,n;if((n=(o=t.toString()).length)>e)o=o.substring(0,e);else for(var i=n;i<e;i++)o="0"+o;return o}function i(t){for(var e=0;null==t.API&&null!=t.parent&&t.parent!=t&&e<7;){if(e>7)return null;e++,t=window.parent}return t.API}var s="false",r=function(){function t(t){this.API=t,this.startTimeStamp=new Date,this.finishCalled=!1,this.initialized=!1,this.processedUnload=!1,this.reachedEnd=!1,this.ScormProcessInitialize(),this.startTimeStamp=new Date}return t.prototype.commit=function(){this.API.LMSCommit("")},t.prototype.ScormProcessInitialize=function(){if(this.API.LMSInitialize("")==s){var t=this.API.LMSGetLastError(),e="Number: "+t+"\nDescription: "+this.API.LMSGetErrorString(t)+"\nDiagnostic: "+this.API.LMSGetDiagnostic(t);console.log("Error - Could not initialize communication with the LMS.\n\nYour results may not be recorded.\n\n"+e),this.initialized=!1}this.initialized=!0},t.prototype.ScormProcessFinish=function(){var t;if(0!=this.initialized&&1!=this.finishCalled)if(t=this.API.LMSFinish(""),this.finishCalled=!0,t!=s);else{var e=this.API.LMSGetLastError(),o="Number: "+e+"\nDescription: "+this.API.LMSGetErrorString(e)+"\nDiagnostic: "+this.API.LMSGetDiagnostic(e);console.log("Error - Could not terminate communication with the LMS.\n\nYour results may not be recorded.\n\n"+o)}},t.prototype.ScormProcessGetValue=function(t){var e;if(0!=this.initialized&&1!=this.finishCalled){if(""==(e=this.API.LMSGetValue(t))){var o=this.API.LMSGetLastError();if("0"!=o){var n="Number: "+o+"\nDescription: "+this.API.LMSGetErrorString(o)+"\nDiagnostic: "+this.API.LMSGetDiagnostic(o);return console.log("Error - Could not retrieve a value from the LMS.\n\n"+n),""}}return e}},t.prototype.ScormProcessSetValue=function(t,e){if(0!=this.initialized&&1!=this.finishCalled&&this.API.LMSSetValue(t,e)==s){var o=this.API.LMSGetLastError(),n="Number: "+o+"\nDescription: "+this.API.LMSGetErrorString(o)+"\nDiagnostic: "+this.API.LMSGetDiagnostic(o);console.log("Error - Could not store a value in the LMS.\n\nYour results may not be recorded.\n\n"+n)}},t.prototype.finishSingleActivityCourse=function(){this.reachedEnd=!0;var t=this.ScormProcessGetValue("cmi.objectives.0.status"),e=this.ScormProcessGetValue("cmi.objectives.0.score.max"),o=this.ScormProcessGetValue("cmi.objectives.0.score.min"),n=this.ScormProcessGetValue("cmi.objectives.0.score.raw");this.ScormProcessSetValue("cmi.core.score.max",e),this.ScormProcessSetValue("cmi.core.score.min",o),this.ScormProcessSetValue("cmi.core.score.raw",n),this.ScormProcessSetValue("cmi.core.lesson_status",t)},t.prototype.setFinishCourse=function(){this.reachedEnd=!0,this.ScormProcessSetValue("cmi.core.score.max","100"),this.ScormProcessSetValue("cmi.core.score.min","0"),this.ScormProcessSetValue("cmi.core.score.raw","100"),this.ScormProcessSetValue("cmi.core.lesson_status","completed")},t.prototype.updateCourseProgress=function(t){this.ScormProcessSetValue("cmi.core.score.max","100"),this.ScormProcessSetValue("cmi.core.score.min","0"),this.ScormProcessSetValue("cmi.core.score.raw",t.toFixed(2)),this.ScormProcessSetValue("cmi.core.lesson_status","completed")},t.prototype.doUnload=function(t){if(void 0===t&&(t=!0),1!=this.processedUnload){this.processedUnload=!0;var e,o,i,s,r,c,a,u,l=(null!=(o=!1)&&null!=o||(o=!0),1e4==(i=((e=(new Date).getTime()-this.startTimeStamp.getTime())-(c=e%1e3)-1e3*(r=(e-c)/1e3%60)-6e4*(s=(e-c-1e3*r)/6e4%60))/36e5)&&(100==(s=(e-36e5*(i=9999))/6e4)&&(s=99),100==(r=(e-36e5*i-6e4*(s=Math.floor(s)))/1e3)&&(r=99),c=e-36e5*i-6e4*s-1e3*(r=Math.floor(r))),a=Math.floor(c/10),u=n(i,4)+":"+n(s,2)+":"+n(r,2),o&&(u+="."+a),i>9999&&(u="9999:99:99",o&&(u+=".99")),u);this.ScormProcessSetValue("cmi.core.session_time",l),0==t&&0==this.reachedEnd&&this.ScormProcessSetValue("cmi.core.exit","suspend"),this.commit(),this.ScormProcessFinish()}},t}();function c(t,e){return t.toString()+"-"+e.toString()}function a(e){var o=e.doc_path,n=e.docname,i=e.meta_data,s=e.title,r=e.children.map((function(t){return a(t)}));return new t(o,n,i,s,r)}function u(t){var e=[];return function t(o){o.shouldIncludeNode()&&e.push(o);for(var n=0,i=o.subNodes;n<i.length;n++)t(i[n])}(t),e}var l=function(){function t(t){this.title=t,localStorage.getItem(t)||localStorage.setItem(t,JSON.stringify(new Array))}return t.prototype.checkProgress=function(t){var e;try{e=localStorage.getItem(this.title)}catch(t){return!1}return!!e&&-1!=JSON.parse(e).indexOf(t)},t.prototype.recordProgress=function(t,e){var o;try{o=localStorage.getItem(this.title)}catch(t){return}if(o){var n=JSON.parse(o);-1==n.indexOf(t)&&(n.push(t),localStorage.setItem(this.title,JSON.stringify(n)))}},t}(),h="completed",d="passed",m=function(){function t(t,e){this.sw=t,this.course=e;for(var o=0;o<=this.course.tocListOrder.length;o++){var n=t.ScormProcessGetValue("cmi.objectives."+o+".status");void 0!==n&&""!=n&&"not attempted"!=n||(this.sw.ScormProcessSetValue("cmi.objectives."+o+".status","incomplete"),this.sw.commit())}}return t.prototype.checkIfComplete=function(){for(var t=!0,e=0,o=0;o<=this.course.tocListOrder.length;o++){var n=this.sw.ScormProcessGetValue("cmi.objectives."+o+".status");n!==h&&n!==d?t=!1:e+=1}t?this.course.tocListOrder.length>1?this.sw.setFinishCourse():this.sw.finishSingleActivityCourse():this.sw.updateCourseProgress(e/this.course.tocListOrder.length*100),this.sw.commit()},t.prototype.checkProgress=function(t){var e=this.course.tocListOrder.findIndex((function(e){return e.docname==t})),o=this.sw.ScormProcessGetValue("cmi.objectives."+e+".status");return o===h||o===d},t.prototype.recordProgress=function(t,e){var o=this.course.tocListOrder.findIndex((function(e){return e.docname==t}));if("quiz"==e.lectureType){var n=(e.score/e.maxScore*100).toFixed(2);this.sw.ScormProcessSetValue("cmi.objectives."+o+".status",d),this.sw.ScormProcessSetValue("cmi.objectives."+o+".score.max","100"),this.sw.ScormProcessSetValue("cmi.objectives."+o+".score.min","0"),this.sw.ScormProcessSetValue("cmi.objectives."+o+".score.raw",n)}else this.sw.ScormProcessSetValue("cmi.objectives."+o+".status",h),this.sw.ScormProcessSetValue("cmi.objectives."+o+".score.max","100"),this.sw.ScormProcessSetValue("cmi.objectives."+o+".score.min","0"),this.sw.ScormProcessSetValue("cmi.objectives."+o+".score.raw","100");this.sw.commit(),this.checkIfComplete()},t}(),v=function(){function t(){}return t.prototype.checkProgress=function(t){return this.progressRecord[t]},t.prototype.recordProgress=function(t,e){this.progressRecord[t]=!0},t}(),f=function(){function t(t,e){if(this.course=t,this.progressManager=e,this.contentSettings={contentTheme:"light",contentZoomFactor:0},this.currentActivity=0,this.lectureHTMLElements=[],this.iFrame=document.getElementById("main-iframe"),this.main=document.getElementById("main"),this.courseContent=document.getElementById("course-content"),this.toc=document.getElementById("toc"),this.tocToggle=document.getElementById("toc-toggle"),this.fontOption=document.getElementById("font-size"),this.fontOptionModal=document.getElementById("font-size-modal"),this.lectureTitleHeader=document.getElementById("lecture-title-header"),this.playerHeader=document.getElementById("player-header"),this.courseTitle=document.getElementById("course-title"),this.contentNav=document.getElementById("content-nav"),this.enlargeFont=document.getElementById("larger-text"),this.reduceFont=document.getElementById("smaller-text"),this.nextActivityButton=document.getElementById("next-activity"),this.previousActivityButton=document.getElementById("previous-activity"),this.courseContentPage=!1,this.courseTitle.innerHTML=t.title,this.course.inSingleLectureMode())this.contentNav.classList.add("content-nav-off"),this.courseContent.classList.add("course-content-fs"),this.tocToggle.style.display="none",this.playerHeader.classList.add("space-around");else{this.course.tocTree.shouldIncludeNode()&&this.toc.append(this.createElement(this.course.tocTree,0));for(var o=0;o<this.course.tocTree.subNodes.length;o++)this.createSections(this.course.tocTree.subNodes[o],this.toc,1);this.isSmallScreen()?(this.contentNav.classList.add("content-nav-off"),this.courseContent.classList.add("course-content-fs"),this.previousScreenSize="small"):(this.contentNav.classList.add("content-nav-on"),this.courseContent.classList.add("course-content-toc"),this.previousScreenSize="large")}this.currentActivity=parseInt(sessionStorage.getItem("activity")||"0",10),this.openContentActivity(this.currentActivity,!0),this.addEventListener()}return t.prototype.addEventListener=function(){var e=this;this.enlargeFont.addEventListener("click",(function(){e.zoomWithFactor(t.zoomFactor),e.contentSettings.contentZoomFactor+=t.zoomFactor})),this.reduceFont.addEventListener("click",(function(){e.zoomWithFactor(-t.zoomFactor),e.contentSettings.contentZoomFactor-=t.zoomFactor})),this.iFrame.addEventListener("load",(function(){var t=parseInt(sessionStorage.getItem("scrollTop")||"0",10);t>0?setTimeout((function(){window.scrollTo(0,t),sessionStorage.removeItem("scrollTop")}),100):window.scrollTo(0,0),e.courseContentPage||(e.onCourseLecture=!1),e.courseContentPage=!1})),window.addEventListener("message",(function(t){e.receiveMessage(t)})),window.addEventListener("click",(function(t){e.fontOption.contains(t.target)?e.fontOptionModal.classList.toggle("hide-element"):e.fontOptionModal.classList.contains("hide-element")||e.fontOptionModal.contains(t.target)||e.fontOptionModal.classList.add("hide-element")})),window.addEventListener("blur",(function(){e.fontOptionModal.classList.add("hide-element")})),this.course.inSingleLectureMode()||(window.addEventListener("resize",(function(){e.isSmallScreen()&&"large"==e.previousScreenSize?(e.navStatus=e.isNavVisible(),e.isNavVisible()&&(e.contentNav.classList.replace("content-nav-on","content-nav-off"),e.courseContent.classList.replace("course-content-toc","course-content-fs")),e.previousScreenSize="small"):e.isSmallScreen()||"small"!=e.previousScreenSize||(e.navStatus?(e.courseContent.classList.replace("course-content-fs","course-content-toc"),setTimeout((function(){e.contentNav.classList.replace("content-nav-off","content-nav-on"),e.lectureHTMLElements[e.currentActivity].scrollIntoView()}),200)):(e.contentNav.classList.replace("content-nav-on","content-nav-off"),e.courseContent.classList.replace("course-content-toc","course-content-fs")),e.previousScreenSize="large")})),this.tocToggle.addEventListener("click",(function(){e.isSmallScreen()&&e.isNavVisible()?(e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs")}),100)):e.isSmallScreen()&&!e.isNavVisible()?(e.navStatus=!0,e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs"),setTimeout((function(){e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off"),e.lectureHTMLElements[e.currentActivity].scrollIntoView()}),200)):!e.isSmallScreen()&&e.isNavVisible()?(e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs")}),200)):e.isSmallScreen()||e.isNavVisible()||(e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs"),setTimeout((function(){e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off"),e.lectureHTMLElements[e.currentActivity].scrollIntoView()}),200))})),this.nextActivityButton.addEventListener("click",(function(){return e.nextActivity()})),this.previousActivityButton.addEventListener("click",(function(){return e.previousActivity()})),window.addEventListener("scroll",(function(){sessionStorage.setItem("scrollTop",document.body.scrollTop.toString())})))},t.prototype.previousActivity=function(){var t=this;this.lectureHTMLElements[this.currentActivity].classList.remove("current"),this.currentActivity-=1,this.openContentActivity(this.currentActivity),this.isSmallScreen()&&(this.toggleClassesOnElement(this.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){t.toggleClassesOnElement(t.courseContent,"course-content-toc","course-content-fs")}),100))},t.prototype.nextActivity=function(){var t=this;this.lectureHTMLElements[this.currentActivity].classList.remove("current"),this.currentActivity+=1,this.openContentActivity(this.currentActivity),this.isSmallScreen()&&(this.toggleClassesOnElement(this.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){t.toggleClassesOnElement(t.courseContent,"course-content-toc","course-content-fs")}),100))},t.prototype.sendMessage=function(t){this.iFrame.contentWindow.postMessage(t,"*")},t.prototype.receiveMessage=function(t){if("registerContent"==t.data.type){var e=t.data.data.href;this.revertIframeHeight(),this.determaineIframeStatus(e),this.sendMessage({type:"contentSettings",data:this.contentSettings}),this.progressManager.checkProgress(this.course.tocListOrder[this.currentActivity].docname)&&this.sendMessage({type:"activityStatus",data:!0})}if("registerContentHeight"==t.data.type&&(this.iFrame.style.height=t.data.data.height+"px"),"registerActivityProgress"==t.data.type){var o=t.data.data;this.course.inSingleLectureMode()||this.markAsDone(this.currentActivity),this.onCourseLecture&&this.progressManager.recordProgress(this.course.tocListOrder[this.currentActivity].docname,o)}"hideContentModal"==t.data.type&&this.showingModal&&(document.body.scrollTop=this.scrollPositionBeforeModal,this.showingModal=!1),"showContentModal"==t.data.type&&(this.showingModal=!0,this.scrollPositionBeforeModal=document.body.scrollTop,document.body.scrollTop=0)},t.prototype.revertIframeHeight=function(){this.iFrame.style.height="100vh"},t.prototype.toggleClassesOnElement=function(t){for(var e=[],o=1;o<arguments.length;o++)e[o-1]=arguments[o];e.forEach((function(e){return t.classList.toggle(e)}))},t.prototype.zoomWithFactor=function(t){this.sendMessage({type:"zoomByFactor",data:t})},t.prototype.setCurrentTitle=function(t){this.lectureTitleHeader.innerHTML=t},t.prototype.frameActivity=function(t){this.iFrame.setAttribute("src",this.course.getActivityURL(t)),this.setCurrentTitle(this.course.tocListOrder[t].title)},t.prototype.isNavVisible=function(){return this.contentNav.classList.contains("content-nav-on")},t.prototype.isSmallScreen=function(){return this.main.clientWidth<=t.MEDIA_QUERY_WIDTH},t.prototype.createSections=function(t,e,o){var n=this.createElement(t,o);if(e.append(n),t.numberOfTrueLectures()>0){var i=document.createElement("ul");i.classList.add("toggle-off","sub-section-wrapper"),n.firstChild.addEventListener("click",(function(){i.classList.toggle("toggle-off")}));for(var s=0,r=t.subNodes;s<r.length;s++){var c=r[s];(c.shouldIncludeNode()||c.numberOfTrueLectures()>0)&&this.createSections(c,i,o+1)}n.append(i)}},t.prototype.createElement=function(t,e){var o=this,n=document.createElement("li"),i=document.createElement("a");return n.classList.add("toctree-l"+e),i.classList.add("reference","internal"),i.innerHTML=t.title,n.append(i),t.numberOfTrueLectures()>0&&e>0&&i.classList.add("has-children"),t.shouldIncludeNode()&&(this.lectureHTMLElements.push(i),i.addEventListener("click",(function(){o.isSmallScreen()&&(o.toggleClassesOnElement(o.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){o.toggleClassesOnElement(o.courseContent,"course-content-toc","course-content-fs")}),100));var e=o.course.tocListOrder.indexOf(t);o.currentActivity!==e&&o.openContentActivity(e)}))),n},t.prototype.openContentActivity=function(t,e){void 0===e&&(e=!1),sessionStorage.setItem("activity",t.toString()),e||sessionStorage.setItem("scrollTop","0"),this.frameActivity(t);var o=this.currentActivity;this.currentActivity=t,this.course.inSingleLectureMode()||(this.lectureHTMLElements[o].classList.remove("current"),this.lectureHTMLElements[this.currentActivity].classList.add("current"),this.lectureHTMLElements[this.currentActivity].parentElement.parentElement.classList.remove("toggle-off"),this.updateButtonStatus())},t.prototype.markAsDone=function(t){console.log("done"+this.lectureHTMLElements[t])},t.prototype.updateButtonStatus=function(){this.currentActivity==this.course.tocListOrder.length-1?this.nextActivityButton.disabled=!0:this.nextActivityButton.disabled=!1,0==this.currentActivity?this.previousActivityButton.disabled=!0:this.previousActivityButton.disabled=!1},t.prototype.determaineIframeStatus=function(t){this.courseContentPage=!0;var e=t.replace(this.course.contentURI+"/",""),o=this.course.isPartOfCourse(e);-1!=o?(o!=this.currentActivity&&this.openContentActivity(o),this.onCourseLecture=!0):this.onCourseLecture=!1},t.MEDIA_QUERY_WIDTH=1150,t.zoomFactor=1,t}();o(177),window.addEventListener("load",(function(){fetch("course.json").then((function(t){return t.json()})).then((function(t){var o,n,s=new e(t),c=(null==(n=i(window))&&null!=window.opener&&void 0!==window.opener&&(n=i(window.opener)),n);if(null!=c){var a=new r(c);o=new m(a,s),window.addEventListener("onbeforeunload",(function(){a.doUnload(!1)})),window.addEventListener("onunload",(function(){a.doUnload()}))}else o=function(){try{return localStorage.setItem("",""),""===localStorage.getItem("")&&(localStorage.removeItem(""),!0)}catch(t){return!1}}()?new l(s.title):new v;new f(s,o)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,